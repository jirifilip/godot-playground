[gd_scene load_steps=4 format=3 uid="uid://c6vxcl8qep7bu"]

[ext_resource type="PackedScene" uid="uid://ds1vsyssxusoe" path="res://ground.tscn" id="1_v1gsf"]

[sub_resource type="GDScript" id="GDScript_amorp"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_aqf8p"]
height = 60.0

[node name="Main" type="Node2D"]
position = Vector2(10, 637)

[node name="Ground" parent="." instance=ExtResource("1_v1gsf")]
position = Vector2(-10, -2)
width = 800.0

[node name="Player" type="CharacterBody2D" parent="."]
script = SubResource("GDScript_amorp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
position = Vector2(86, -86)
shape = SubResource("CapsuleShape2D_aqf8p")

[node name="ColorRect" type="ColorRect" parent="Player"]
offset_left = 76.0
offset_top = -119.0
offset_right = 98.0
offset_bottom = -55.0
color = Color(1, 0.298039, 1, 1)
metadata/_edit_use_anchors_ = true
